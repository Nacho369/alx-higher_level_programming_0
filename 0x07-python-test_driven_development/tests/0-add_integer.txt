============================
How to use 0-add_integer.py
============================

This module defines an integer addition function ``add_integer(a, b)`` which adds to integers.

Numbers
=======

``add_integer()`` returns the sum of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator

Test for positive integers

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(3, 9)
	12

Test for negative integers

::

	>>> add_integer(-4, -6)
	-10

Test for positive and negative numbers

::

	>>> add_integer(6, -7)                                            -1

Test for floats

::

	>>> add_integer(6.0, 2.0)
	8

Test for float and positive integers

::

	>>> add_integer(6.0, 7)                                           13

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised.

::

	>>> add_integer(6, 'test')
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer('new', 'test')
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer
