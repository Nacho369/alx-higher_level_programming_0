===============================
How to use 2-matrix_divided.txt
===============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided`` divides all element of a matrix and returns a new matrix.
Note: All quotient of the matrix would be rounded to 2 decimal places

Valid Matrix
============

Test for integers values in the matrix

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

Test for floating point numbers 

::

	>>> matrix = [[2.6, 3.5, 4.8], [5.12, 9.86, 12.3], [7.32, 8.76, 10.8]]
	>>> print(matrix_divided(matrix, 3))
	[[0.87, 1.17, 1.6], [1.71, 3.29, 4.1], [2.44, 2.92, 3.6]]

Test for integers and float values

::

	>>> matrix = [[2.6, 5, 8], [5.12, 9, 12.6], [7, 8, 10.8]]
	>>> print(matrix_divided(matrix, 3))
	[[0.87, 1.67, 2.67], [1.71, 3.0, 4.2], [2.33, 2.67, 3.6]]

Test for negative integers

::

	>>> matrix = [[1, 2, -3], [-4, 5, -56], [7, -8, 9]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, -1.0], [-1.33, 1.67, -18.67], [2.33, -2.67, 3.0]]

Invalide Matrix
===============

An empty matrix would raise a TypeError, matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = []
    	>>> print(matrix_divided(matrix, 3))
    	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

All values but integers or float would raise a TypeError, matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = [[2, 4, 6], [8, None, 12], [14, 16, 'a']]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = ([2, 4, 6], [8, 10, 12], [14, 16, 18])
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = [(2, 4, 6), [8, 10, 12], [14, 16, 18]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

A TypeError would be raise uf matrix each row if the matrix is not of same size

::

	>>> matrix = [[26], [8, 10, 12], [14, 16]]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

The divisor must be a number(integer or float) otherwise a TypeError would be raised

::

	>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	>>> print(matrix_divided(matrix, 'a'))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

The divisor must nit be equal to zero(0) otherwise a ZeroDivisionError would be raised

::

	>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
